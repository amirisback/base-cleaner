plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {

    // Declaration admob id for release
    def releaseAdmobPublisherId = ""
    def releaseAdmobBanner = ""
    def releaseAdmobInterstitial = ""
    def releaseAdmobInterstitialVideo = ""
    def releaseAdmobRewardedVideo = ""
    def releaseAdmobNativeAdvanced = ""
    def releaseAdmobNativeAdvancedVideo = ""

    compileSdk projectCompileSdk

    defaultConfig {
        applicationId projectPackageName
        minSdk projectMinSdk
        targetSdk projectTargetSdk
        versionCode projectVersionCode
        versionName projectVersionName

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resConfigs "en", "id"
        vectorDrawables.useSupportLibrary = true

        def debugAttribute = "Development"
        def nameAppDebug = "$nameApp $debugAttribute"

        // Naming APK // AAB
        setProperty("archivesBaseName", nameAPK + "#" + versionName + "-"
                + new Date().format('ddMMyy'))

        // Inject app name for debug
        resValue "string", "app_name", nameAppDebug

        // Declaration admob id for debug
        def debugAdmobPublisherId = "ca-app-pub-3940256099942544~3347511713"
        def debugAdmobBanner = "ca-app-pub-3940256099942544/6300978111"
        def debugAdmobInterstitial = "ca-app-pub-3940256099942544/1033173712"
        def debugAdmobInterstitialVideo = "ca-app-pub-3940256099942544/8691691433"
        def debugAdmobRewardedVideo = "ca-app-pub-3940256099942544/5224354917"
        def debugAdmobNativeAdvanced = "ca-app-pub-3940256099942544/2247696110"
        def debugAdmobNativeAdvancedVideo = "ca-app-pub-3940256099942544/1044960115"

        // Inject admob id for debug
        resValue "string", "admob_publisher_id", debugAdmobPublisherId
        resValue "string", "admob_banner", debugAdmobBanner
        resValue "string", "admob_interstitial", debugAdmobInterstitial
        resValue "string", "admob_interstitial_video", debugAdmobInterstitialVideo
        resValue "string", "admob_rewarded_video", debugAdmobRewardedVideo
        resValue "string", "admob_native_advanced", debugAdmobNativeAdvanced
        resValue "string", "admob_native_advanced_video", debugAdmobNativeAdvancedVideo

    }

    signingConfigs {
        release {
            // You need to specify either an absolute path or include the
            // keystore file in the same directory as the build.gradle file.
            // [PROJECT FOLDER NAME/app/[COPY YOUT KEY STORE] .jks in here
            storeFile file(projectJksStoreFile)
            storePassword projectJksStorePassword
            keyAlias projectJksKeyAlias
            keyPassword projectJksKeyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true

            // Disable Debug Mode
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false

            // Generated Signed APK / AAB
            signingConfig signingConfigs.release

            // Inject app name for release
            resValue "string", "app_name", nameApp

            // Inject admob id for release
            resValue "string", "admob_publisher_id", releaseAdmobPublisherId
            resValue "string", "admob_banner", releaseAdmobBanner
            resValue "string", "admob_interstitial", releaseAdmobInterstitial
            resValue "string", "admob_interstitial_video", releaseAdmobInterstitialVideo
            resValue "string", "admob_rewarded_video", releaseAdmobRewardedVideo
            resValue "string", "admob_native_advanced", releaseAdmobNativeAdvanced
            resValue "string", "admob_native_advanced_video", releaseAdmobNativeAdvancedVideo

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    buildFeatures {
        viewBinding true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.android.gms:play-services-ads:20.2.0'

    implementation 'com.github.bmarrdev:android-DecoView-charting:v1.2'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'

    implementation 'com.github.amirisback:frogo-recycler-view:3.8.5'
    implementation 'com.github.amirisback:frogo-log:2.0.4'
    implementation 'com.github.amirisback:frogo-notification:1.0.7'
    implementation 'com.github.amirisback:frogo-admob:4.1.1'

    implementation 'com.github.frogobox:frogo-android-sdk:2.0.2'
    implementation 'com.github.frogobox:frogo-android-ui-kit:1.0.4'
    implementation 'com.github.frogobox:frogo-consume-api:1.0.5'

    implementation 'com.zys:brokenview:1.0.3'
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.wang.avi:library:2.1.3'

    implementation 'jp.wasabeef:recyclerview-animators:3.0.0'
    implementation 'me.itangqi.waveloadingview:library:0.3.5'
    implementation 'tyrantgit:explosionfield:1.0.1'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation "androidx.room:room-testing:2.3.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}