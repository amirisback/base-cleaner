apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {

    // Version Project
    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0

    // Application ID
    def packageDomain = "com"
    def packageAccount = "frogobox"
    def packageProject = "cleaner"

    // Signing Release Key Store
    def projectJksStoreFile = "frogoboxdev.jks"
    def projectJksStorePassword = "cronoclez"
    def projectJksKeyAlias = "frogobox"
    def projectJksKeyPassword = "xeonranger"

    def projectVersionCode = (versionMajor * 100) + (versionMinor * 10) + (versionPatch * 1)
    def projectVersionName = "$versionMajor.$versionMinor.$versionPatch"
    def projectPackageName = "$packageDomain.$packageAccount.$packageProject"

    // Declaration app name
    def nameApp = "Base Cleaner"

    // Declaration apk / aab name
    def nameAPK = nameApp.toLowerCase().replace(" ", "-")

    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId projectPackageName
        minSdkVersion 21
        targetSdkVersion 29
        versionCode projectVersionCode
        versionName projectVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Declaration admob id for debug
        def debugAdmobPublisherId = "ca-app-pub-3940256099942544~3347511713"
        def debugAdmobBanner = "ca-app-pub-3940256099942544/6300978111"
        def debugAdmobInterstitial = "ca-app-pub-3940256099942544/1033173712"
        def debugAdmobInterstitialVideo = "ca-app-pub-3940256099942544/8691691433"
        def debugAdmobRewardedVideo = "ca-app-pub-3940256099942544/5224354917"
        def debugAdmobNativeAdvanced = "ca-app-pub-3940256099942544/2247696110"
        def debugAdmobNativeAdvancedVideo = "ca-app-pub-3940256099942544/1044960115"

        // Naming APK // AAB
        setProperty("archivesBaseName", nameAPK + "#(" + versionName + ")-" + new Date().format('ddMMyy'))

        resConfigs "en", "id"
        vectorDrawables.useSupportLibrary = true

        // Inject app name for debug
        resValue "string", "app_name", nameApp

        // Inject admob id for debug
        resValue "string", "admob_publisher_id", debugAdmobPublisherId
        resValue "string", "admob_banner", debugAdmobBanner
        resValue "string", "admob_interstitial", debugAdmobInterstitial
        resValue "string", "admob_interstitial_video", debugAdmobInterstitialVideo
        resValue "string", "admob_rewarded_video", debugAdmobRewardedVideo
        resValue "string", "admob_native_advanced", debugAdmobNativeAdvanced
        resValue "string", "admob_native_advanced_video", debugAdmobNativeAdvancedVideo

    }

    signingConfigs {
        release {
            // You need to specify either an absolute path or include the
            // keystore file in the same directory as the build.gradle file.
            // [PROJECT FOLDER NAME/app/[COPY YOUT KEY STORE] .jks in here
            storeFile file(projectJksStoreFile)
            storePassword projectJksStorePassword
            keyAlias projectJksKeyAlias
            keyPassword projectJksKeyPassword
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Generated Signed APK / AAB
            signingConfig signingConfigs.release

            // Declaration admob id for release
            def releaseAdmobPublisherId = ""
            def releaseAdmobBanner = ""
            def releaseAdmobInterstitial = ""
            def releaseAdmobInterstitialVideo = ""
            def releaseAdmobRewardedVideo = ""
            def releaseAdmobNativeAdvanced = ""
            def releaseAdmobNativeAdvancedVideo = ""


            // Inject app name for release
            resValue "string", "app_name", nameApp

            // Inject admob id for release
            resValue "string", "admob_publisher_id", releaseAdmobPublisherId
            resValue "string", "admob_banner", releaseAdmobBanner
            resValue "string", "admob_interstitial", releaseAdmobInterstitial
            resValue "string", "admob_interstitial_video", releaseAdmobInterstitialVideo
            resValue "string", "admob_rewarded_video", releaseAdmobRewardedVideo
            resValue "string", "admob_native_advanced", releaseAdmobNativeAdvanced
            resValue "string", "admob_native_advanced_video", releaseAdmobNativeAdvancedVideo

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.google.android.material:material:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.android.gms:play-services-ads:19.1.0'

    implementation 'com.github.bmarrdev:android-DecoView-charting:v1.2'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    
    // library frogo-recycler-view
    implementation 'com.github.amirisback:frogo-recycler-view:2.2.4'

    implementation 'com.zys:brokenview:1.0.3'
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.wang.avi:library:2.1.3'

    implementation 'jp.wasabeef:recyclerview-animators:2.2.5'
    implementation 'me.itangqi.waveloadingview:library:0.3.5'
    implementation 'tyrantgit:explosionfield:1.0.1'

    testImplementation 'junit:junit:4.13'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}